module dns-zones {

  namespace "http://www.nic.cz/ns/yang/dns-zones";

  prefix "dnsz";

  import ietf-inet-types {
    prefix "inet";
  }

  import iana-dns-parameters {
    prefix "ianadns";
  }

  organization
    "CZ.NIC, z. s. p. o.";

  contact
    "Editor:   Ladislav Lhotka
               <mailto:lhotka@nic.cz>";

  description
    "This module provides a framework for DNS zone configuration.";

  revision 2015-08-11 {
    description
      "Initial revision.";
  }

  /* Typedefs */

  typedef positive-int32 {
    type int32 {
      range "1..max";
    }
  }

  /* Groupings */

  grouping description {
    description
      "This grouping defines a reusable description (comment).";
    leaf description {
      type string;
      description
        "Description of the parent item.";
    }
  }

  grouping entry-id {
    description
      "This grouping defines a leaf that is intended for use as a
       list key.";
    leaf id {
      type string;
      description
        "Opaque ID of a list entry.";
    }
  }

  /* Configuration data */

  container zones {
    description
      "Container for DNS zones.";
    list zone {
      key "name";
      description
        "Data for a DNS zone.";
      leaf name {
        type inet:domain-name;
        description
          "Zone name.";
      }
      uses description;
      leaf class {
        type ianadns:class;
        default "IN";
        description
          "RR Class";
      }
      list rrset {
        key "owner type";
        min-elements "1";
        description
          "RRSet";
        leaf owner {
          type inet:domain-name;
          description
            "Owner of the RRSet (domain name) relative to the name of
             the parent zone – i.e. the absolute domain name is
             obtained by appending ../../name.";
        }
        leaf type {
          type identityref {
            base ianadns:data-rrtype;
          }
          description
            "RR type";
        }
        uses description;
        leaf ttl {
          type positive-int32;
          mandatory "true";
          description
            "TTL of all records in the RRSet.";
        }
        list rdata {
          key "id";
          uses entry-id;
          uses description;
        }
      }
    }
  }
}
