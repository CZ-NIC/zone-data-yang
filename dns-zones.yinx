<?xml version="1.0" encoding="utf-8"?>
<module name="dns-zones"
        xmlns="urn:ietf:params:xml:ns:yang:yin:1"
        xmlns:dnsz="http://www.nic.cz/ns/yang/dns-zones"
        xmlns:h="http://www.w3.org/1999/xhtml">
  <namespace uri="http://www.nic.cz/ns/yang/dns-zones"/>
  <prefix value="dnsz"/>

  <!-- Imports -->

  <import module="ietf-inet-types">
    <prefix value="inet"/>
  </import>
  <import module="ietf-yang-types">
    <prefix value="yang"/>
  </import>
  <import module="iana-dns-parameters">
    <prefix value="ianadns"/>
  </import>

  <!-- Metadata -->

  <organization>
    <text>CZ.NIC, z. s. p. o.</text>
  </organization>
  <contact>
    <text>
      <h:p>
        Editor:   Ladislav Lhotka<h:br/>
                  &lt;mailto:lhotka@nic.cz&gt;
      </h:p>
    </text>
  </contact>
  <description>
    <text>
      <h:p>This module defines a data model for DNS zone
      configuration.</h:p>
    </text>
  </description>
  <reference>
    <text>
      RFC 1035: Domain Names - Implementation and Specification.
    </text>
  </reference>
  <revision date="2015-08-11">
    <description>
      <text>Initial revision.</text>
    </description>
  </revision>

  <!-- Typedefs -->

  <typedef name="domain-name">
    <type name="string">
      <pattern
	  value="((\*\.)?(([a-zA-Z0-9_]([a-zA-Z0-9\-/_]){0,61})?[a-zA-Z0-9]\.)*([a-zA-Z0-9_]([a-zA-Z0-9\-_]){0,61})?[a-zA-Z0-9]\.?)|\."><?delim )?></pattern>
      <length value="1..253"/>
    </type>
  </typedef>

  <typedef name="ascii-string">
    <description>
      <text>
	A string consisting of ASCII characters (U+0000 to U+007F).
      </text>
    </description>
    <type name="string">
      <pattern value="\p{IsBasicLatin}*"/>
    </type>
  </typedef>

  <typedef name="base32hex">
    <description>
      <text>
	<h:p>This typedef represents binary data in Base 32 encoding with
	extended hex alphabet.</h:p>
	<h:p>This type differs from base32hex spec in that letters can
	be upper- or lower-case.</h:p>
      </text>
    </description>
    <reference>
      <text>
	RFC 4648: The Base16, Base32, and Base64 Data Encodings
      </text>
    </reference>
    <type name="string">
      <pattern
	  value="([0-9A-Va-v]{8})*([0-9A-Va-v]{2}={6}||[0-9A-Va-v]{4}={4}|[0-9A-Va-v]{5}===|[0-9A-Va-v]{7}=)?"/>
    </type>
  </typedef>

  <typedef name="hex-digits">
    <description>
      <text>
	A string of case-insensitive hexadecimal digits, possibly
	empty.
      </text>
    </description>
    <type name="string">
      <pattern value="[0-9A-Fa-f]*"/>
    </type>
  </typedef>

  <typedef name="time-interval">
    <type name="uint32">
      <range value="1..max"/>
    </type>
    <units name="seconds"/>
    <description>
      <text>
	32-bit time interval.
      </text>
    </description>
  </typedef>

  <typedef name="utc-date-time">
    <description>
      <text>
	UTC date and time.
      </text>
    </description>
    <type name="yang:date-and-time">
      <pattern value=".*Z"/>
    </type>
  </typedef>
  
  <!-- Groupings -->

  <grouping name="description">
    <description>
      <text>
	This grouping defines a reusable description (comment).
      </text>
    </description>
    <leaf name="description">
      <type name="string"/>
      <description>
	<text>
	  Description of the parent item.
	</text>
      </description>
    </leaf>
  </grouping>
  
  <grouping name="entry-id">
    <description>
      <text>
	This grouping defines a leaf that is intended for use as a
	list key.
      </text>
    </description>
    <leaf name="id">
      <description>
	<text>
	  Opaque ID of a list entry.
	</text>
      </description>
      <type name="string"/>
    </leaf>
  </grouping>

  <grouping name="owner-field">
    <description>
      <text>
	This grouping defines the content of the 'owner' field in a
	resource record or RRSet.
      </text>
    </description>
  </grouping>

  <grouping name="ttl-field">
    <description>
      <text>
	This grouping defines the content of the 'ttl' field in a
	resource record or RRSet.
      </text>
    </description>
    <leaf name="ttl">
      <type name="time-interval"/>
      <description>
	<text>
	  Time-To-Live of a resource record or RRSet.
	</text>
      </description>
    </leaf>
  </grouping>
  
  <grouping name="key-tag-field">
    <description>
      <text>
	This grouping defines the 'key-tag' field that is used in
	RRSIG and DS resource records.
      </text>
    </description>
    <leaf name="key-tag">
      <type name="uint16"/>
      <mandatory value="true"/>
      <description>
	<text>
	  The Key Tag field contains the key tag value of the DNSKEY
	  RR that validates this signature, in network byte order.
	</text>
      </description>
    </leaf>
  </grouping>

  <grouping name="rrset-types">
    <description>
      <text>
	This grouping defines a sequence of RR types, It is used in
	NSEC and NSEC3 resource records.
      </text>
    </description>
    <leaf-list name="rrset-type">
      <type name="identityref">
	<base name="ianadns:data-rrtype"/>
      </type>
      <min-elements value="1"/>
      <description>
	<text>
	  This leaf-list represents the Type Bit Maps field. Its
	  entries identify the RRset types that exist at the NSEC RR's
	  owner name.
	</text>
      </description>
    </leaf-list>
  </grouping>

  <grouping name="nsec3-common">
    <description>
      <text>
	This grouping defines common field of NSEC3 and NSEC3PARAM
	resource records.
      </text>
    </description>
    <leaf name="hash-algorithm">
      <type name="ianadns:dnssec-nsec3-hash-algorithm"/>
      <default value="SHA-1"/>
      <description>
	<text>
	  This field identifies the cryptographic hash algorithm used
	  to construct the hash-value.
	</text>
      </description>
    </leaf>
    <leaf name="iterations">
      <type name="uint16"/>
      <mandatory value="true"/>
      <description>
	<text>
	  This field defines the number of additional times the hash
	  function has been performed.
	</text>
      </description>
    </leaf>
    <leaf name="salt">
      <type name="hex-digits">
	<length value="0..510"/>
      </type>
      <mandatory value="true"/>
      <description>
	<text>
	  This field is appended to the original owner name before
	  hashing in order to defend against pre-calculated dictionary
	  attacks.
	</text>
      </description>
    </leaf>
  </grouping>

  <!-- Configuration data -->

  <container name="zones">
    <description>
      <text>
	Container for DNS zones.
      </text>
    </description>
    <list name="zone">
      <key value="name"/>
      <description>
	<text>
	  Data for a DNS zone.
	</text>
      </description>
      <leaf name="name">
	<description>
	  <text>
	    Zone name.
	  </text>
	</description>
	<type name="domain-name"/>
      </leaf>
      <uses name="description"/>
      <leaf name="class">
	<type name="ianadns:class"/>
	<default value="IN"/>
	<description>
	  <text>RR Class</text>
	</description>
      </leaf>
      <leaf name="default-ttl">
	<type name="time-interval"/>
	<mandatory value="true"/>
	<description>
	  <text>
	    Default TTL for the entire zone.
	  </text>
	</description>
      </leaf>
      <container name="SOA">
	<description>
	  <text>
	    SOA RR for the zone.
	  </text>
	</description>
	<uses name="ttl-field"/>
	<leaf name="mname">
	  <type name="domain-name"/>
	  <mandatory value="true"/>
	  <description>
	    <text>
	      Name server that was the original or primary source of
	      data for this zone.
	    </text>
	  </description>
	</leaf>
	<leaf name="rname">
	  <type name="domain-name"/>
	  <mandatory value="true"/>
	  <description>
	    <text>
	      Mailbox of the person responsible for this zone.
	    </text>
	  </description>
	</leaf>
	<leaf name="serial">
	  <type name="yang:counter32"/>
	  <mandatory value="true"/>
	  <description>
	    <text>
	      Version number of the original copy of the zone.
	    </text>
	  </description>
	</leaf>
	<leaf name="refresh">
	  <type name="time-interval"/>
	  <mandatory value="true"/>
	  <description>
	    <text>
	      Time interval that should elapse before the zone should
	      be refreshed.
	    </text>
	  </description>
	</leaf>
	<leaf name="retry">
	  <type name="time-interval"/>
	  <mandatory value="true"/>
	  <description>
	    <text>
	      Time interval that should elapse before a failed refresh
	      should be retried.
	    </text>
	  </description>
	</leaf>
	<leaf name="expire">
	  <type name="time-interval"/>
	  <mandatory value="true"/>
	  <description>
	    <text>
	      Upper limit on the time interval that can elapse before
	      the zone is no longer authoritative.
	    </text>
	  </description>
	</leaf>
	<leaf name="minimum">
	  <type name="time-interval"/>
	  <mandatory value="true"/>
	  <description>
	    <text>
	      Minimum TTL that should be exported with any RR from
	      this zone.
	    </text>
	  </description>
	</leaf>
      </container>
      <list name="rrset">
	<key value="owner type"/>
	<description>
	  <text>RRSet</text>
	</description>
	<leaf name="owner">
	  <type name="domain-name"/>
	  <description>
	    <text>
	      <h:p>Owner of the RRSet.</h:p>
	      <h:p>It is an absolute domain name without the trailing
	      period.</h:p>
	    </text>
	  </description>
	</leaf>
	<leaf name="type">
	  <type name="identityref">
	    <base name="ianadns:data-rrtype"/>
	  </type>
	  <description>
	    <text>RR type</text>
	  </description>
	</leaf>
	<uses name="ttl-field">
	  <description>
	    <text>
	      TTL of all resource records in the RRSet.
	    </text>
	  </description>
	</uses>
	<uses name="description"/>
	<list name="rdata">
	  <key value="id"/>
	  <min-elements value="1"/>
	  <uses name="entry-id"/>
	  <uses name="description"/>
	  <choice name="rdata-content">
	    <mandatory value="true"/>
	    <description>
	      <text>
		<h:p>Each (shorthand) case of this choice defines the
		content of a single RR type wrapped in a container
		whose name is the RR type (in lowercase).</h:p>
		<h:p>The SOA RR id defined separately.</h:p>
		<h:p>New RR types defined in other modules shall
		augment the 'rdata-content' choice.</h:p>
	      </text>
	    </description>

	    <!-- RFC 1035 -->

	    <container name="A">
	      <must condition="../../type = 'ianadns:A'"/>
	      <description>
		<text>
		  RDATA content for 'A' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="address">
		<type name="inet:ipv4-address-no-zone"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    IPv4 address.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="CNAME">
	      <must condition="../../type = 'ianadns:CNAME'"/>
	      <description>
		<text>
		  RDATA content for 'CNAME' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="cname">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Canonical or primary name for the owner.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="HINFO">
	      <must condition="../../type = 'ianadns:HINFO'"/>
	      <description>
		<text>
		  RDATA content for 'HINFO' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="cpu">
		<type name="ascii-string"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    CPU type.
		  </text>
		</description>
	      </leaf>
	      <leaf name="os">
		<type name="ascii-string"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Operating system type.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="MB">
	      <must condition="../../type = 'ianadns:MB'"/>
	      <description>
		<text>
		  RDATA content for 'MB' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="madname">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Host which has the specified mailbox.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="MD">
	      <must condition="../../type = 'ianadns:MD'"/>
	      <status value="obsolete"/>
	      <description>
		<text>
		  RDATA content for 'MD' Resource Record (obsolete,
		  use MX).
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="madname">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Host which has a mail agent for the domain which
		    should be able to deliver mail for the domain.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="MF">
	      <must condition="../../type = 'ianadns:MF'"/>
	      <status value="obsolete"/>
	      <description>
		<text>
		  RDATA content for 'MF' Resource Record (obsolete,
		  use MX).
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="madname">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Host which has a mail agent for the domain which
		    will accept mail for forwarding to the domain.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="MG">
	      <must condition="../../type = 'ianadns:MG'"/>
	      <description>
		<text>
		  RDATA content for 'MG' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="mgmname">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Mailbox which is a member of the mail group
		    specified by the domain name.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="MINFO">
	      <must condition="../../type = 'ianadns:MINFO'"/>
	      <description>
		<text>
		  RDATA content for 'MINFO' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="rmailbx">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Mailbox which is responsible for the mailing list
		    or mailbox.
		  </text>
		</description>
	      </leaf>
	      <leaf name="emailbx">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Mailbox which is to receive error messages related
		    to the mailing list or mailbox specified by the
		    owner of the MINFO RR.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="MR">
	      <must condition="../../type = 'ianadns:MR'"/>
	      <description>
		<text>
		  RDATA content for 'MR' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="newname">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Mailbox which is the proper rename of the
		    specified mailbox.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="MX">
	      <must condition="../../type = 'ianadns:MX'"/>
	      <description>
		<text>
		  RDATA content for 'MX' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="preference">
		<type name="uint16"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Preference given to this RR among others at the
		    same owner. Lower values are preferred.
		  </text>
		</description>
	      </leaf>
	      <leaf name="exchange">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Host willing to act as a mail exchange for the
		    owner name.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="NS">
	      <must condition="../../type = 'ianadns:NS'"/>
	      <description>
		<text>
		  RDATA content for 'NS' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="nsdname">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Host which should be authoritative for the
		    specified domain.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="NULL">
	      <must condition="../../type = 'ianadns:NULL'"/>
	      <description>
		<text>
		  RDATA content for 'NULL' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="data">
		<type name="binary">
		  <length value="0..65535"/>
		</type>
		<mandatory value="true"/>
		<description>
		  <text>
		    Arbitrary data.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="PTR">
	      <must condition="../../type = 'ianadns:PTR'"/>
	      <description>
		<text>
		  RDATA content for 'PTR' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="ptrdname">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    A pointer to some location in the domain name
		    space.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="TXT">
	      <must condition="../../type = 'ianadns:TXT'"/>
	      <description>
		<text>
		  RDATA content for 'TXT' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="txt-data">
		<type name="ascii-string"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Descriptive text whose semantics depends on the
		    domain where it is found.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="WKS">
	      <must condition="../../type = 'ianadns:WKS'"/>
	      <description>
		<text>
		  RDATA content for 'WKS' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 1035: Domain Names - Implementation and
		  Specification.
		</text>
	      </reference>
	      <leaf name="address">
		<type name="inet:ipv4-address-no-zone"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    IPv4 address.
		  </text>
		</description>
	      </leaf>
	      <leaf name="protocol">
		<type name="uint8"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    IP protocol number.
		  </text>
		</description>
	      </leaf>
	      <leaf name="bitmap">
		<type name="binary"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    A variable length bitmap that has one bit per port
		    of the specified protocol.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <!-- RFC 3596 -->

	    <container name="AAAA">
	      <must condition="../../type = 'ianadns:AAAA'"/>
	      <description>
		<text>
		  RDATA content for 'AAAA' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 3596: DNS Extensions to Support IP Version 6
		</text>
	      </reference>
	      <leaf name="address">
		<type name="inet:ipv6-address-no-zone"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    IPv6 address.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <!-- RFC 4034 -->

	    <container name="DNSKEY">
	      <must condition="../../type = 'ianadns:DNSKEY'"/>
	      <description>
		<text>
		  RDATA content for 'DNSKEY' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 4034: Resource Records for the DNS Security
		  Extensions
		</text>
	      </reference>
	      <leaf name="flags">
		<type name="ianadns:dnskey-flags"/>
		<must condition="not(contains(., 'ZONE')) or
				 ../../../owner = ../../../../name">
		  <description>
		    <text>
		      For a Zone Key, the DNSKEY RR's owner name MUST
		      be the name of a zone.
		    </text>
		  </description>
		  <error-message>
		    <value>
		      For a Zone Key, owner name must be the zone name.
		    </value>
		  </error-message>
		</must>
		<must condition="contains(., 'ZONE') or
				 not(contains(., 'SEP'))">
		  <description>
		    <text>
		      Secure Entry Point flag needs Zone Key flag.
		    </text>
		  </description>
		  <error-message>
		    <value>
		      'secure-entry-point' is set but 'zone-key' isn't
		    </value>
		  </error-message>
		</must>
		<description>
		  <text>DNSKEY RR flags.</text>
		</description>
	      </leaf>
	      <leaf name="protocol">
		<type name="uint8">
		  <range value="3"/>
		</type>
		<default value="3"/>
		<description>
		  <text>
		    Protocol field. It's value MUST be 3.
		  </text>
		</description>
	      </leaf>
	      <leaf name="algorithm">
		<type name="ianadns:dnssec-algorithm"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field identifies the public key's
		    cryptographic algorithm and determines the format
		    of the 'public-key' field.
		  </text>
		</description>
	      </leaf>
	      <leaf name="public-key">
		<type name="binary">
		  <length value="1..max"/>
		</type>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field contains public key material. Its
		    format depends on the algorithm.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="RRSIG">
	      <must condition="../../type = 'ianadns:RRSIG'"/>
	      <description>
		<text>
		  RDATA content for 'RRSIG' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 4034: Resource Records for the DNS Security
		  Extensions
		</text>
	      </reference>
	      <leaf name="type-covered">
		<type name="identityref">
		  <base name="ianadns:data-rrtype"/>
		</type>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field identifies the type of the RRset that
		    is covered by this RRSIG record.
		  </text>
		</description>
	      </leaf>
	      <leaf name="algorithm">
		<type name="ianadns:dnssec-algorithm"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field identifies the cryptographic algorithm
		    used to create the signature.
		  </text>
		</description>
	      </leaf>
	      <leaf name="labels">
		<type name="uint8">
		  <range value="1..127"/>
		</type>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field specifies the number of labels in the
		    original RRSIG RR owner name.
		  </text>
		</description>
		<reference>
		  <text>
		    RFC 4035: Protocol Modifications for the DNS
		    Security Extensions
		  </text>
		</reference>
	      </leaf>
	      <leaf name="original-ttl">
		<type name="leafref">
		  <path
		      value="../../../../rrset[owner=current()/../../../owner][type=current()/../type-covered]/ttl"/>
		</type>
		<description>
		  <text>
		    This field specifies the TTL of the covered RRset
		    as it appears in the authoritative zone.
		  </text>
		</description>
	      </leaf>
	      <leaf name="signature-expiration">
		<type name="utc-date-time"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field specifies the end of a validity period
		    for the signature as UTC date and time. The RRSIG
		    record MUST NOT be used for authentication after
		    the expiration date and time.
		  </text>
		</description>
	      </leaf>
	      <leaf name="signature-inception">
		<type name="utc-date-time"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    <h:p>This field specifies the start of a validity
		    period for the signature as UTC date and time. The
		    RRSIG record MUST NOT be used for authentication
		    prior the inception date and time.</h:p>
		    <h:p>This date MUST precede the date specified in
		    'signature-expiration'.</h:p>
		  </text>
		</description>
	      </leaf>
	      <uses name="key-tag-field"/>
	      <leaf name="signer-name">
		<type name="domain-name"/>
		<must condition=". = ../../../../name">
		  <description>
		    <text>
		      The Signer's Name field MUST contain the name of
		      the zone of the covered RRset.
		    </text>
		  </description>
		  <error-message>
		    <value>Signer's name invalid</value>
		  </error-message>
		</must>
		<description>
		  <text>
		    This field identifies the owner name of the DNSKEY
		    RR that a validator is supposed to use to validate
		    this signature.
		  </text>
		</description>
	      </leaf>
	      <leaf name="signature">
		<type name="binary">
		  <length value="1..max"/>
		</type>
		<mandatory value="true"/>
		<description>
		  <text>
		    <h:p>This field contains the cryptographic
		    signature that covers the RRSIG RDATA (excluding
		    the Signature field) and the RRset specified by
		    the RRSIG owner name, RRSIG class, and RRSIG Type
		    Covered field.</h:p>
		    <h:p>The format of this field depends on the algorithm in
		    use.</h:p>
		  </text>
		</description>
	      </leaf>
	    </container>

	    <container name="NSEC">
	      <must condition="../../type = 'ianadns:NSEC'"/>
	      <description>
		<text>
		  RDATA content for 'NSEC' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 4034: Resource Records for the DNS Security
		  Extensions
		</text>
	      </reference>
	      <leaf name="next-domain-name">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field contains the next owner name (in the
		    canonical ordering of the zone) that has
		    authoritative data or contains a delegation point
		    NS RRset.
		  </text>
		</description>
	      </leaf>
	      <uses name="rrset-types"/>
	    </container>

	    <container name="DS">
	      <must condition="../../type = 'ianadns:DS'"/>
	      <description>
		<text>
		  RDATA content for 'DS' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 4034: Resource Records for the DNS Security
		  Extensions
		</text>
	      </reference>
	      <uses name="key-tag-field"/>
	      <leaf name="algorithm">
		<type name="ianadns:dnssec-algorithm"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field specifies the algorithm of the DNSKEY
		    RR referred to by the DS record.
		  </text>
		</description>
	      </leaf>
	      <leaf name="digest-type">
		<type name="ianadns:digest-algorithm"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field identifies the algorithm used to
		    construct the digest of the DNSKEY RR.
		  </text>
		</description>
	      </leaf>
	      <leaf name="digest">
		<type name="hex-digits">
		  <length value="1..max"/>
		</type>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field contains a digest of the DNSKEY RR to
		    which the DS RR refers.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <!-- RFC 5155 -->

	    <container name="NSEC3">
	      <must condition="../../type = 'ianadns:NSEC3'"/>
	      <description>
		<text>
		  RDATA content for 'NSEC3' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 5155: DNS Security (DNSSEC) Hashed Authenticated
		  Denial of Existence
		</text>
	      </reference>
	      <uses name="nsec3-common"/>
	      <leaf name="flags">
		<type name="ianadns:dnssec-nsec3-flags"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field contains flags that indicate different
		    processing of the NSEC3 RR data.
		  </text>
		</description>
	      </leaf>
	      <leaf name="next-hashed-owner-name">
		<type name="base32hex">
		  <length value="8..408"/>
		</type>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field contains the next hashed owner name in
		    hash order.
		  </text>
		</description>
	      </leaf>
	      <uses name="rrset-types"/>
	    </container>

	    <container name="NSEC3PARAM">
	      <must condition="../../type = 'ianadns:NSEC3PARAM'"/>
	      <description>
		<text>
		  RDATA content for 'NSEC3PARAM' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 5155: DNS Security (DNSSEC) Hashed Authenticated
		  Denial of Existence
		</text>
	      </reference>
	      <uses name="nsec3-common"/>
	    </container>

	    <!-- RFC 6698 -->

	    <container name="TLSA">
	      <must condition="../../type = 'ianadns:TLSA'"/>
	      <description>
		<text>
		  RDATA content for 'TLSA' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 6698: The DNS-Based Authentication of Named
		  Entities (DANE) Transport Layer Security (TLS)
		  Protocol: TLSA
		</text>
	      </reference>
	      <leaf name="certificate-usage">
		<type name="ianadns:tlsa-certificate-usages"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field specifies the provided association that
		    will be used to match the certificate presented in
		    the TLS handshake.
		  </text>
		</description>
	      </leaf>
	      <leaf name="selector">
		<type name="ianadns:tlsa-selectors"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field specifies which part of the TLS
		    certificate presented by the server will be
		    matched against the association data.
		  </text>
		</description>
	      </leaf>
	      <leaf name="matching-type">
		<type name="ianadns:tlsa-matching-types"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field specifies how the certificate
		    association is presented.
		  </text>
		</description>
	      </leaf>
	      <leaf name="certificate-association-data">
		<type name="hex-digits">
		  <length value="1..max"/>
		</type>
		<mandatory value="true"/>
		<description>
		  <text>
		    <h:p>This field specifies the "certificate association
		    data" to be matched.</h:p>
		    <h:p>These bytes are either raw data (that is, the
		    full certificate or its SubjectPublicKeyInfo,
		    depending on 'selector') for 'matching-type' 0, or
		    the hash of the raw data for 'matching-type' 1 and
		    2.</h:p>
		    <h:p>The data refers to the certificate in the
		    association, not to the TLS ASN.1 Certificate
		    object.</h:p>
		  </text>
		</description>
	      </leaf>
	    </container>

	    <!-- RFC 4025 -->

	    <container name="IPSECKEY">
	      <must condition="../../type = 'ianadns:IPSECKEY'"/>
	      <description>
		<text>
		  RDATA content for 'IPSECKEY' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 4025: A Method for Storing IPsec Keying Material
		  in DNS
		</text>
	      </reference>
	      <leaf name="precedence">
		<type name="uint8"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    <h:p>Precedence of the resource record.</h:p>
		    <h:p>Gateways listed in IPSECKEY records with
		    lower precedence are to be attempted first.  Where
		    there is a tie in precedence, the order should be
		    non-deterministic.</h:p>
		  </text>
		</description>
	      </leaf>
	      <leaf name="gateway-type">
		<type name="ianadns:ipseckey-gateway-type"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field indicates the format of the information
		    that is stored in the gateway field.
		  </text>
		</description>
	      </leaf>
	      <leaf name="algorithm">
		<type name="ianadns:ipseckey-algorithm-type"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field identifies the public key's
		    cryptographic algorithm and determines the format
		    of the 'public-key' field.
		  </text>
		</description>
	      </leaf>
	      <leaf name="gateway">
		<when condition="../gateway-type != 'no-gateway'">
		  <description>
		    <text>
		      This field cannot be present if the value of
		      'gateway-type' is 'no-gateway'.
		    </text>
		  </description>
		</when>
		<type name="inet:host"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    <h:p>This field indicates a gateway to which an IPsec
		    tunnel may be created in order to reach the entity
		    named by this resource record.</h:p>
		    <h:p>The format of this field MUST correspond to
		    the value set in 'gateway-type'.</h:p>
		  </text>
		</description>
	      </leaf>
	      <leaf name="public-key">
		<when condition="../algorithm != 'no-key'">
		  <description>
		    <text>
		      This field cannot be present if the value of
		      'algorithm' is 'no-key'.
		    </text>
		  </description>
		</when>
		<type name="binary"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    This field contains the IPSec public key in a
		    format corresponding to the value of 'algorithm'.
		  </text>
		</description>
	      </leaf>
	    </container>

	    <!-- RFC 2672 -->

	    <container name="DNAME">
	      <must condition="../../type = 'ianadns:DNAME'"/>
	      <description>
		<text>
		  RDATA content for 'DNAME' Resource Record.
		</text>
	      </description>
	      <reference>
		<text>
		  RFC 2672: Non-Terminal DNS Name Redirection
		</text>
	      </reference>
	      <leaf name="target">
		<type name="domain-name"/>
		<mandatory value="true"/>
		<description>
		  <text>
		    Target domain name that is substituted for 'owner'
		    as a suffix of a domain name.
		  </text>
		</description>
	      </leaf>
	    </container>

	  </choice>
	</list>
      </list>
    </list>
  </container>

</module>
